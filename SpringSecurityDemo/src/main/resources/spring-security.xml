<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <security:http auto-config="true" use-expressions="true" access-denied-page="/auth/denied">
        <security:intercept-url pattern="/auth/login" access="permitAll"/>
        <security:intercept-url pattern="/main/admin" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/main/common" access="hasRole('ROLE_USER')"/>


        <!--
            login-page:登录页面url
            login-processing-url:提交数据的url,即表单中的action的值(spring security自带处理函数)
            authentication-failure-url:登录失败的处理url
            default-target-url:登录成功默认的处理url
         -->
        <security:form-login
                login-page="/auth/login"
                authentication-failure-url="/auth/login?error=true"
                login-processing-url="/login-check"
                default-target-url="/main/common"/>

        <!--
            logout-success-url:登出成功的处理url
            logout-url:登出url(spring security自带处理函数)
        -->
        <security:logout
                invalidate-session="true"
                logout-success-url="/auth/login"
                logout-url="/auth/lo"/>
    </security:http>

    <!-- 指定一个自定义的authentication-manager :customUserDetailsService -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="customUserDetailsService">
            <!--<security:password-encoder ref="passwordEncoder"/>-->
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- 对密码进行MD5编码 -->
    <bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>

    <!--
        通过 customUserDetailsService,Spring会自动的用户的访问级别.
        也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联.
     -->
    <bean id="customUserDetailsService" class="com.clean.demo.service.CustomerUserDetailsService"/>
</beans>